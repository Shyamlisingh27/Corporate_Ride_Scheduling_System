{"ast":null,"code":"// Get token from localStorage\nexport function getToken() {\n  return localStorage.getItem('token');\n}\n\n// Decode JWT to get user info (role, etc.)\nexport function getUserFromToken() {\n  const token = getToken();\n  if (!token) return null;\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload;\n  } catch {\n    return null;\n  }\n  // try {\n  //   return JSON.parse(localStorage.getItem('user'));\n  // } catch {\n  //   return null;\n  // }\n}\n\n// Check if user is admin\nexport function isAdmin() {\n  const user = getUserFromToken();\n  return user && user.role === 'admin';\n}","map":{"version":3,"names":["getToken","localStorage","getItem","getUserFromToken","token","payload","JSON","parse","atob","split","isAdmin","user","role"],"sources":["C:/Users/Shyamli Singh/Desktop/Corporate_Ride_Scheeduling_System/frontend/src/utils/auth.js"],"sourcesContent":["// Get token from localStorage\r\nexport function getToken() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n// Decode JWT to get user info (role, etc.)\r\nexport function getUserFromToken() {\r\n  const token = getToken();\r\n  if (!token) return null;\r\n  try {\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    return payload;\r\n  } catch {\r\n    return null;\r\n  }\r\n  // try {\r\n  //   return JSON.parse(localStorage.getItem('user'));\r\n  // } catch {\r\n  //   return null;\r\n  // }\r\n}\r\n\r\n// Check if user is admin\r\nexport function isAdmin() {\r\n  const user = getUserFromToken();\r\n  return user && user.role === 'admin';\r\n}"],"mappings":"AAAA;AACA,OAAO,SAASA,QAAQA,CAAA,EAAG;EACzB,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACtC;;AAEA;AACA,OAAO,SAASC,gBAAgBA,CAAA,EAAG;EACjC,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE,OAAO,IAAI;EACvB,IAAI;IACF,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,OAAOJ,OAAO;EAChB,CAAC,CAAC,MAAM;IACN,OAAO,IAAI;EACb;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA;AACA,OAAO,SAASK,OAAOA,CAAA,EAAG;EACxB,MAAMC,IAAI,GAAGR,gBAAgB,CAAC,CAAC;EAC/B,OAAOQ,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,OAAO;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}