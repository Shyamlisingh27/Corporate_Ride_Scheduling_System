{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shyamli Singh\\\\Desktop\\\\Corporate_Ride_Scheeduling_System\\\\frontend\\\\src\\\\components\\\\AdminRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { getToken, getUserFromToken, isAdmin } from '../utils/auth';\n\n// const AdminRoute = ({ children }) => {\n//   const token = getToken();\n//   const user = getUserFromToken();\n//   return token && user && user.role === 'admin'\n//     ? children\n//     : <Navigate to=\"/login\" />;\n\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  const token = getToken();\n  const user = getUserFromToken();\n  console.log(\"ðŸ§  AdminRoute - token:\", token);\n  console.log(\"ðŸ§  AdminRoute - user:\", user);\n  if (!token || !user || user.role !== 'admin') {\n    console.warn(\"â›” Not an admin or not logged in\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","getToken","getUserFromToken","isAdmin","jsxDEV","_jsxDEV","AdminRoute","children","token","user","console","log","role","warn","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shyamli Singh/Desktop/Corporate_Ride_Scheeduling_System/frontend/src/components/AdminRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getToken, getUserFromToken, isAdmin } from '../utils/auth';\r\n\r\n// const AdminRoute = ({ children }) => {\r\n//   const token = getToken();\r\n//   const user = getUserFromToken();\r\n//   return token && user && user.role === 'admin'\r\n//     ? children\r\n//     : <Navigate to=\"/login\" />;\r\n  \r\n// };\r\n\r\n\r\nconst AdminRoute = ({ children }) => {\r\n  const token = getToken();\r\n  const user = getUserFromToken();\r\n\r\n  console.log(\"ðŸ§  AdminRoute - token:\", token);\r\n  console.log(\"ðŸ§  AdminRoute - user:\", user);\r\n\r\n  if (!token || !user || user.role !== 'admin') {\r\n    console.warn(\"â›” Not an admin or not logged in\");\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\n\r\n\r\n\r\nexport default AdminRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,QAAQ,EAAEC,gBAAgB,EAAEC,OAAO,QAAQ,eAAe;;AAEnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnC,MAAMC,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,MAAMQ,IAAI,GAAGP,gBAAgB,CAAC,CAAC;EAE/BQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,KAAK,CAAC;EAC5CE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,IAAI,CAAC;EAE1C,IAAI,CAACD,KAAK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACG,IAAI,KAAK,OAAO,EAAE;IAC5CF,OAAO,CAACG,IAAI,CAAC,iCAAiC,CAAC;IAC/C,oBAAOR,OAAA,CAACL,QAAQ;MAACc,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,OAAOX,QAAQ;AACjB,CAAC;AAACY,EAAA,GAbIb,UAAU;AAkBhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}